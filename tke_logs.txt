INFO 07-08 11:49:41 [__init__.py:253] Automatically detected platform cuda.
Model: /scratch/usr/quantized_model/
Number of prompts: 25
Batch size: 1
Iterations: 1
Warmup iterations: 0
Effective kv_cache_dtype: fp8
INFO 07-08 11:49:49 [config.py:841] This model supports multiple tasks: {'classify', 'generate', 'reward', 'embed'}. Defaulting to 'generate'.
kv_cache_dtype: fp8
INFO 07-08 11:49:49 [config.py:1609] Using fp8 data type to store kv cache. It reduces the GPU memory footprint and boosts the performance. Meanwhile, it may cause accuracy drop without a proper scaling factor
INFO 07-08 11:49:49 [config.py:2301] Chunked prefill is enabled with max_num_batched_tokens=16384.
WARNING 07-08 11:49:50 [modelopt.py:49] Detected ModelOpt fp8 checkpoint. Please note that the format is experimental and could change.
INFO 07-08 11:49:50 [core.py:526] Waiting for init message from front-end.
INFO 07-08 11:49:50 [core.py:69] Initializing a V1 LLM engine (v0.1.dev7506+ge5d398a) with config: model='/scratch/usr/quantized_model/', speculative_config=None, tokenizer='/scratch/usr/quantized_model/', skip_tokenizer_init=False, tokenizer_mode=auto, revision=None, override_neuron_config={}, tokenizer_revision=None, trust_remote_code=True, dtype=torch.bfloat16, max_seq_len=131072, download_dir=None, load_format=LoadFormat.AUTO, tensor_parallel_size=4, pipeline_parallel_size=1, disable_custom_all_reduce=False, quantization=modelopt, enforce_eager=False, kv_cache_dtype=fp8,  device_config=cuda, decoding_config=DecodingConfig(backend='auto', disable_fallback=False, disable_any_whitespace=False, disable_additional_properties=False, reasoning_backend=''), observability_config=ObservabilityConfig(show_hidden_metrics_for_version=None, otlp_traces_endpoint=None, collect_detailed_traces=None), seed=0, served_model_name=/scratch/usr/quantized_model/, num_scheduler_steps=1, multi_step_stream_outputs=True, enable_prefix_caching=False, chunked_prefill_enabled=True, use_async_output_proc=True, pooler_config=None, compilation_config={"level":3,"debug_dump_path":"","cache_dir":"","backend":"","custom_ops":[],"splitting_ops":["vllm.unified_attention","vllm.unified_attention_with_output"],"use_inductor":true,"compile_sizes":[],"inductor_compile_config":{"enable_auto_functionalized_v2":false},"inductor_passes":{},"use_cudagraph":true,"cudagraph_num_of_warmups":1,"cudagraph_capture_sizes":[512,504,496,488,480,472,464,456,448,440,432,424,416,408,400,392,384,376,368,360,352,344,336,328,320,312,304,296,288,280,272,264,256,248,240,232,224,216,208,200,192,184,176,168,160,152,144,136,128,120,112,104,96,88,80,72,64,56,48,40,32,24,16,8,4,2,1],"cudagraph_copy_inputs":false,"full_cuda_graph":false,"max_capture_size":512,"local_cache_dir":null}
WARNING 07-08 11:49:50 [multiproc_worker_utils.py:307] Reducing Torch parallelism from 112 threads to 1 to avoid unnecessary CPU contention. Set OMP_NUM_THREADS in the external environment to tune this value as needed.
INFO 07-08 11:49:50 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0, 1, 2, 3], buffer_handle=(4, 16777216, 10, 'psm_1c75a733'), local_subscribe_addr='ipc:///tmp/aef37bac-af01-4901-bbc0-f0349e5624e2', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:55 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_4a854bc1'), local_subscribe_addr='ipc:///tmp/89bfe1fe-8806-4773-b665-8128f9fcd84a', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:55 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_440f2ba9'), local_subscribe_addr='ipc:///tmp/468fd24e-3404-41fb-85c8-3b4817964117', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:55 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_262fe968'), local_subscribe_addr='ipc:///tmp/1d9a512b-0141-4bbf-b931-37645f6bc047', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:55 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[0], buffer_handle=(1, 10485760, 10, 'psm_1652e773'), local_subscribe_addr='ipc:///tmp/aaef9fda-1ba7-4799-b674-2699f4d562d9', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:56 [__init__.py:1152] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:56 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:56 [__init__.py:1152] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:56 [__init__.py:1152] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:56 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:56 [__init__.py:1152] Found nccl from library libnccl.so.2
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:56 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:56 [pynccl.py:70] vLLM is using nccl==2.26.2
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:59 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/jdebache/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:59 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/jdebache/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:59 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/jdebache/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:59 [custom_all_reduce_utils.py:246] reading GPU P2P access cache from /home/jdebache/.cache/vllm/gpu_p2p_access_cache_for_0,1,2,3.json
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:59 [shm_broadcast.py:289] vLLM message queue communication handle: Handle(local_reader_ranks=[1, 2, 3], buffer_handle=(3, 4194304, 6, 'psm_95582622'), local_subscribe_addr='ipc:///tmp/a0edce53-62bf-4ccc-85b6-43b60e2c1ecb', remote_subscribe_addr=None, remote_addr_ipv6=False)
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:59 [parallel_state.py:1076] rank 2 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 2, EP rank 2
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:59 [parallel_state.py:1076] rank 0 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 0, EP rank 0
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:59 [parallel_state.py:1076] rank 1 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 1, EP rank 1
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:59 [parallel_state.py:1076] rank 3 in world size 4 is assigned as DP rank 0, PP rank 0, TP rank 3, EP rank 3
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m WARNING 07-08 11:49:59 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m WARNING 07-08 11:49:59 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m WARNING 07-08 11:49:59 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m WARNING 07-08 11:49:59 [topk_topp_sampler.py:59] FlashInfer is not available. Falling back to the PyTorch-native implementation of top-p & top-k sampling. For the best performance, please install FlashInfer.
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1770] Starting to load model /scratch/usr/quantized_model/...
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1770] Starting to load model /scratch/usr/quantized_model/...
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1770] Starting to load model /scratch/usr/quantized_model/...
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1770] Starting to load model /scratch/usr/quantized_model/...
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1775] Loading model from scratch...
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1775] Loading model from scratch...
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:49:59 [gpu_model_runner.py:1775] Loading model from scratch...
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:00 [gpu_model_runner.py:1775] Loading model from scratch...
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:00 [cuda.py:245] Using TKE backend on V1 engine.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:00 [cuda.py:245] Using TKE backend on V1 engine.
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:00 [cuda.py:245] Using TKE backend on V1 engine.
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:00 [cuda.py:245] Using TKE backend on V1 engine.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:   0% Completed | 0/26 [00:00<?, ?it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:   4% Completed | 1/26 [00:00<00:10,  2.39it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:   8% Completed | 2/26 [00:00<00:10,  2.22it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  12% Completed | 3/26 [00:01<00:10,  2.13it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  15% Completed | 4/26 [00:01<00:10,  2.08it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  19% Completed | 5/26 [00:02<00:10,  2.05it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  23% Completed | 6/26 [00:02<00:09,  2.04it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  27% Completed | 7/26 [00:03<00:09,  2.07it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  31% Completed | 8/26 [00:03<00:08,  2.07it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  35% Completed | 9/26 [00:04<00:08,  2.07it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  38% Completed | 10/26 [00:04<00:07,  2.13it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  42% Completed | 11/26 [00:05<00:07,  2.13it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  46% Completed | 12/26 [00:05<00:06,  2.10it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  50% Completed | 13/26 [00:06<00:06,  2.08it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  54% Completed | 14/26 [00:06<00:04,  2.54it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  58% Completed | 15/26 [00:06<00:04,  2.53it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  62% Completed | 16/26 [00:07<00:04,  2.41it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  65% Completed | 17/26 [00:07<00:03,  2.33it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  69% Completed | 18/26 [00:08<00:03,  2.27it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  73% Completed | 19/26 [00:08<00:03,  2.23it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  77% Completed | 20/26 [00:09<00:02,  2.19it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  81% Completed | 21/26 [00:09<00:02,  2.17it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  85% Completed | 22/26 [00:10<00:01,  2.16it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  88% Completed | 23/26 [00:10<00:01,  2.19it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  92% Completed | 24/26 [00:11<00:00,  2.11it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards:  96% Completed | 25/26 [00:11<00:00,  2.07it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards: 100% Completed | 26/26 [00:12<00:00,  2.01it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Loading safetensors checkpoint shards: 100% Completed | 26/26 [00:12<00:00,  2.16it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m 
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:12 [default_loader.py:272] Loading weights took 11.96 seconds
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:12 [default_loader.py:272] Loading weights took 11.94 seconds
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:12 [default_loader.py:272] Loading weights took 12.11 seconds
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:12 [default_loader.py:272] Loading weights took 12.09 seconds
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:86] Checkpoint does not provide a q scaling factor. Setting it to k_scale. This only matters for the flash-attn backend.
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:99] Using KV cache scaling factor 1.0 for fp8_e4m3. This may cause accuracy issues. Please make sure k/v_scale scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:130] Using uncalibrated q_scale 1.0 and/or prob_scale 1.0 with fp8 attention. This may cause accuracy issues. Please make sure q/prob scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:86] Checkpoint does not provide a q scaling factor. Setting it to k_scale. This only matters for the flash-attn backend.
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:99] Using KV cache scaling factor 1.0 for fp8_e4m3. This may cause accuracy issues. Please make sure k/v_scale scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:130] Using uncalibrated q_scale 1.0 and/or prob_scale 1.0 with fp8 attention. This may cause accuracy issues. Please make sure q/prob scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:86] Checkpoint does not provide a q scaling factor. Setting it to k_scale. This only matters for the flash-attn backend.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:99] Using KV cache scaling factor 1.0 for fp8_e4m3. This may cause accuracy issues. Please make sure k/v_scale scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:130] Using uncalibrated q_scale 1.0 and/or prob_scale 1.0 with fp8 attention. This may cause accuracy issues. Please make sure q/prob scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:86] Checkpoint does not provide a q scaling factor. Setting it to k_scale. This only matters for the flash-attn backend.
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:99] Using KV cache scaling factor 1.0 for fp8_e4m3. This may cause accuracy issues. Please make sure k/v_scale scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m WARNING 07-08 11:50:12 [kv_cache.py:130] Using uncalibrated q_scale 1.0 and/or prob_scale 1.0 with fp8 attention. This may cause accuracy issues. Please make sure q/prob scaling factors are available in the fp8 checkpoint.
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:13 [gpu_model_runner.py:1801] Model loading took 28.7703 GiB and 12.565141 seconds
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:13 [gpu_model_runner.py:1801] Model loading took 28.7703 GiB and 12.548390 seconds
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:13 [gpu_model_runner.py:1801] Model loading took 28.7703 GiB and 12.595192 seconds
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:13 [gpu_model_runner.py:1801] Model loading took 28.7703 GiB and 12.566205 seconds
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:22 [backends.py:508] Using cache directory: /home/jdebache/.cache/vllm/torch_compile_cache/5818ccf441/rank_2_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:22 [backends.py:519] Dynamo bytecode transform time: 9.14 s
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:22 [backends.py:508] Using cache directory: /home/jdebache/.cache/vllm/torch_compile_cache/5818ccf441/rank_3_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:22 [backends.py:519] Dynamo bytecode transform time: 9.20 s
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:22 [backends.py:508] Using cache directory: /home/jdebache/.cache/vllm/torch_compile_cache/5818ccf441/rank_0_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:22 [backends.py:519] Dynamo bytecode transform time: 9.29 s
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:22 [backends.py:508] Using cache directory: /home/jdebache/.cache/vllm/torch_compile_cache/5818ccf441/rank_1_0/backbone for vLLM's torch.compile
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:22 [backends.py:519] Dynamo bytecode transform time: 9.30 s
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:56 [backends.py:181] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:50:56 [backends.py:193] Compiling a graph for general shape takes 31.37 s
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:57 [backends.py:181] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:50:57 [backends.py:193] Compiling a graph for general shape takes 31.37 s
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:57 [backends.py:181] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:50:57 [backends.py:193] Compiling a graph for general shape takes 31.85 s
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:57 [backends.py:181] Cache the graph of shape None for later use
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:50:57 [backends.py:193] Compiling a graph for general shape takes 31.84 s
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:51:38 [monitor.py:34] torch.compile takes 40.52 s in total
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:51:39 [monitor.py:34] torch.compile takes 40.66 s in total
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:51:39 [monitor.py:34] torch.compile takes 41.13 s in total
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:51:40 [monitor.py:34] torch.compile takes 41.05 s in total
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:51:43 [gpu_worker.py:233] Available KV cache memory: 90.54 GiB
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:51:43 [gpu_worker.py:233] Available KV cache memory: 90.54 GiB
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:51:43 [gpu_worker.py:233] Available KV cache memory: 90.34 GiB
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:51:43 [gpu_worker.py:233] Available KV cache memory: 90.34 GiB
INFO 07-08 11:51:44 [kv_cache_utils.py:716] GPU KV cache size: 2,157,632 tokens
INFO 07-08 11:51:44 [kv_cache_utils.py:720] Maximum concurrency for 131,072 tokens per request: 16.46x
INFO 07-08 11:51:44 [kv_cache_utils.py:716] GPU KV cache size: 2,152,800 tokens
INFO 07-08 11:51:44 [kv_cache_utils.py:720] Maximum concurrency for 131,072 tokens per request: 16.42x
INFO 07-08 11:51:44 [kv_cache_utils.py:716] GPU KV cache size: 2,152,800 tokens
INFO 07-08 11:51:44 [kv_cache_utils.py:720] Maximum concurrency for 131,072 tokens per request: 16.42x
INFO 07-08 11:51:44 [kv_cache_utils.py:716] GPU KV cache size: 2,157,632 tokens
INFO 07-08 11:51:44 [kv_cache_utils.py:720] Maximum concurrency for 131,072 tokens per request: 16.46x
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m Capturing CUDA graph shapes:   0%|          | 0/67 [00:00<?, ?it/s]Capturing CUDA graph shapes:   1%|▏         | 1/67 [00:00<00:51,  1.28it/s]Capturing CUDA graph shapes:   3%|▎         | 2/67 [00:01<00:50,  1.29it/s]Capturing CUDA graph shapes:   4%|▍         | 3/67 [00:02<00:49,  1.29it/s]Capturing CUDA graph shapes:   6%|▌         | 4/67 [00:03<00:48,  1.30it/s]Capturing CUDA graph shapes:   7%|▋         | 5/67 [00:03<00:47,  1.30it/s]Capturing CUDA graph shapes:   9%|▉         | 6/67 [00:04<00:46,  1.30it/s]Capturing CUDA graph shapes:  10%|█         | 7/67 [00:05<00:46,  1.30it/s]Capturing CUDA graph shapes:  12%|█▏        | 8/67 [00:06<00:45,  1.30it/s]Capturing CUDA graph shapes:  13%|█▎        | 9/67 [00:06<00:44,  1.30it/s]Capturing CUDA graph shapes:  15%|█▍        | 10/67 [00:07<00:43,  1.30it/s]Capturing CUDA graph shapes:  16%|█▋        | 11/67 [00:08<00:43,  1.30it/s]Capturing CUDA graph shapes:  18%|█▊        | 12/67 [00:09<00:42,  1.30it/s]Capturing CUDA graph shapes:  19%|█▉        | 13/67 [00:10<00:41,  1.30it/s]Capturing CUDA graph shapes:  21%|██        | 14/67 [00:10<00:40,  1.30it/s]Capturing CUDA graph shapes:  22%|██▏       | 15/67 [00:11<00:39,  1.30it/s]Capturing CUDA graph shapes:  24%|██▍       | 16/67 [00:12<00:39,  1.30it/s]Capturing CUDA graph shapes:  25%|██▌       | 17/67 [00:13<00:38,  1.30it/s]Capturing CUDA graph shapes:  27%|██▋       | 18/67 [00:13<00:37,  1.30it/s]Capturing CUDA graph shapes:  28%|██▊       | 19/67 [00:14<00:36,  1.30it/s]Capturing CUDA graph shapes:  30%|██▉       | 20/67 [00:15<00:36,  1.30it/s]Capturing CUDA graph shapes:  31%|███▏      | 21/67 [00:16<00:35,  1.30it/s]Capturing CUDA graph shapes:  33%|███▎      | 22/67 [00:16<00:34,  1.30it/s]Capturing CUDA graph shapes:  34%|███▍      | 23/67 [00:17<00:33,  1.31it/s]Capturing CUDA graph shapes:  36%|███▌      | 24/67 [00:18<00:32,  1.32it/s]Capturing CUDA graph shapes:  37%|███▋      | 25/67 [00:19<00:31,  1.33it/s]Capturing CUDA graph shapes:  39%|███▉      | 26/67 [00:19<00:30,  1.34it/s]Capturing CUDA graph shapes:  40%|████      | 27/67 [00:20<00:30,  1.32it/s]Capturing CUDA graph shapes:  42%|████▏     | 28/67 [00:21<00:29,  1.33it/s]Capturing CUDA graph shapes:  43%|████▎     | 29/67 [00:22<00:28,  1.34it/s]Capturing CUDA graph shapes:  45%|████▍     | 30/67 [00:22<00:27,  1.34it/s]Capturing CUDA graph shapes:  46%|████▋     | 31/67 [00:23<00:26,  1.34it/s]Capturing CUDA graph shapes:  48%|████▊     | 32/67 [00:24<00:25,  1.35it/s]Capturing CUDA graph shapes:  49%|████▉     | 33/67 [00:25<00:25,  1.36it/s]Capturing CUDA graph shapes:  51%|█████     | 34/67 [00:25<00:24,  1.37it/s]Capturing CUDA graph shapes:  52%|█████▏    | 35/67 [00:26<00:23,  1.37it/s]Capturing CUDA graph shapes:  54%|█████▎    | 36/67 [00:27<00:22,  1.37it/s]Capturing CUDA graph shapes:  55%|█████▌    | 37/67 [00:27<00:21,  1.37it/s]Capturing CUDA graph shapes:  57%|█████▋    | 38/67 [00:28<00:21,  1.38it/s]Capturing CUDA graph shapes:  58%|█████▊    | 39/67 [00:29<00:20,  1.38it/s]Capturing CUDA graph shapes:  60%|█████▉    | 40/67 [00:30<00:19,  1.38it/s]Capturing CUDA graph shapes:  61%|██████    | 41/67 [00:30<00:18,  1.38it/s]Capturing CUDA graph shapes:  63%|██████▎   | 42/67 [00:31<00:18,  1.38it/s]Capturing CUDA graph shapes:  64%|██████▍   | 43/67 [00:32<00:17,  1.37it/s]Capturing CUDA graph shapes:  66%|██████▌   | 44/67 [00:33<00:16,  1.37it/s]Capturing CUDA graph shapes:  67%|██████▋   | 45/67 [00:33<00:15,  1.38it/s]Capturing CUDA graph shapes:  69%|██████▊   | 46/67 [00:34<00:15,  1.38it/s]Capturing CUDA graph shapes:  70%|███████   | 47/67 [00:35<00:14,  1.38it/s]Capturing CUDA graph shapes:  72%|███████▏  | 48/67 [00:35<00:13,  1.38it/s]Capturing CUDA graph shapes:  73%|███████▎  | 49/67 [00:36<00:13,  1.38it/s]Capturing CUDA graph shapes:  75%|███████▍  | 50/67 [00:37<00:12,  1.38it/s]Capturing CUDA graph shapes:  76%|███████▌  | 51/67 [00:38<00:11,  1.38it/s]Capturing CUDA graph shapes:  78%|███████▊  | 52/67 [00:38<00:10,  1.39it/s]Capturing CUDA graph shapes:  79%|███████▉  | 53/67 [00:39<00:10,  1.38it/s]Capturing CUDA graph shapes:  81%|████████  | 54/67 [00:40<00:09,  1.39it/s]Capturing CUDA graph shapes:  82%|████████▏ | 55/67 [00:41<00:08,  1.39it/s]Capturing CUDA graph shapes:  84%|████████▎ | 56/67 [00:41<00:07,  1.39it/s]Capturing CUDA graph shapes:  85%|████████▌ | 57/67 [00:42<00:07,  1.39it/s]Capturing CUDA graph shapes:  87%|████████▋ | 58/67 [00:43<00:06,  1.38it/s]Capturing CUDA graph shapes:  88%|████████▊ | 59/67 [00:43<00:05,  1.38it/s]Capturing CUDA graph shapes:  90%|████████▉ | 60/67 [00:44<00:05,  1.38it/s]Capturing CUDA graph shapes:  91%|█████████ | 61/67 [00:45<00:04,  1.38it/s]Capturing CUDA graph shapes:  93%|█████████▎| 62/67 [00:46<00:03,  1.38it/s]Capturing CUDA graph shapes:  94%|█████████▍| 63/67 [00:46<00:02,  1.38it/s]Capturing CUDA graph shapes:  96%|█████████▌| 64/67 [00:47<00:02,  1.39it/s]Capturing CUDA graph shapes:  97%|█████████▋| 65/67 [00:48<00:01,  1.39it/s]Capturing CUDA graph shapes:  99%|█████████▊| 66/67 [00:48<00:00,  1.39it/s][1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:52:34 [custom_all_reduce.py:196] Registering 7965 cuda graph addresses
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:52:34 [custom_all_reduce.py:196] Registering 7965 cuda graph addresses
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:52:34 [custom_all_reduce.py:196] Registering 7965 cuda graph addresses
Capturing CUDA graph shapes: 100%|██████████| 67/67 [00:49<00:00,  1.38it/s]Capturing CUDA graph shapes: 100%|██████████| 67/67 [00:49<00:00,  1.35it/s]
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:52:34 [custom_all_reduce.py:196] Registering 7965 cuda graph addresses
[1;36m(VllmWorker rank=3 pid=2645024)[0;0m INFO 07-08 11:52:34 [gpu_model_runner.py:2326] Graph capturing finished in 50 secs, took 0.84 GiB
[1;36m(VllmWorker rank=0 pid=2645015)[0;0m INFO 07-08 11:52:34 [gpu_model_runner.py:2326] Graph capturing finished in 50 secs, took 0.84 GiB
[1;36m(VllmWorker rank=1 pid=2645018)[0;0m INFO 07-08 11:52:34 [gpu_model_runner.py:2326] Graph capturing finished in 50 secs, took 0.84 GiB
[1;36m(VllmWorker rank=2 pid=2645021)[0;0m INFO 07-08 11:52:34 [gpu_model_runner.py:2326] Graph capturing finished in 50 secs, took 0.84 GiB
INFO 07-08 11:52:34 [core.py:172] init engine (profile, create kv cache, warmup model) took 141.85 seconds

Warming up...
Warmup iterations: 0it [00:00, ?it/s]Warmup iterations: 0it [00:00, ?it/s]

Benchmarking...
Benchmark iterations:   0%|          | 0/1 [00:00<?, ?it/s]
Adding requests:   0%|          | 0/25 [00:00<?, ?it/s][AAdding requests: 100%|██████████| 25/25 [00:00<00:00, 1148.82it/s]

Processed prompts:   0%|          | 0/25 [00:00<?, ?it/s, est. speed input: 0.00 toks/s, output: 0.00 toks/s][A
Processed prompts:   4%|▍         | 1/25 [00:00<00:03,  6.09it/s, est. speed input: 48.75 toks/s, output: 91.36 toks/s][A
Processed prompts:   8%|▊         | 2/25 [00:00<00:09,  2.54it/s, est. speed input: 51.43 toks/s, output: 90.34 toks/s][A
Processed prompts:  12%|█▏        | 3/25 [00:00<00:07,  2.93it/s, est. speed input: 58.10 toks/s, output: 90.15 toks/s][A
Processed prompts:  16%|█▌        | 4/25 [00:01<00:05,  3.99it/s, est. speed input: 60.36 toks/s, output: 90.08 toks/s][A
Processed prompts:  20%|██        | 5/25 [00:01<00:09,  2.18it/s, est. speed input: 51.09 toks/s, output: 90.32 toks/s][A
Processed prompts:  28%|██▊       | 7/25 [00:03<00:09,  1.92it/s, est. speed input: 45.84 toks/s, output: 90.40 toks/s][A
Processed prompts:  32%|███▏      | 8/25 [00:03<00:07,  2.13it/s, est. speed input: 47.53 toks/s, output: 90.40 toks/s][A
Processed prompts:  36%|███▌      | 9/25 [00:03<00:06,  2.49it/s, est. speed input: 49.85 toks/s, output: 90.39 toks/s][A
Processed prompts:  40%|████      | 10/25 [00:04<00:07,  2.10it/s, est. speed input: 48.23 toks/s, output: 90.43 toks/s][A
Processed prompts:  48%|████▊     | 12/25 [00:04<00:05,  2.54it/s, est. speed input: 47.76 toks/s, output: 90.43 toks/s][A
Processed prompts:  52%|█████▏    | 13/25 [00:05<00:04,  2.55it/s, est. speed input: 48.42 toks/s, output: 90.42 toks/s][A
Processed prompts:  56%|█████▌    | 14/25 [00:05<00:03,  3.07it/s, est. speed input: 49.08 toks/s, output: 90.41 toks/s][A
Processed prompts:  60%|██████    | 15/25 [00:06<00:04,  2.10it/s, est. speed input: 46.33 toks/s, output: 90.43 toks/s][A
Processed prompts:  64%|██████▍   | 16/25 [00:06<00:03,  2.51it/s, est. speed input: 46.29 toks/s, output: 90.43 toks/s][A
Processed prompts:  68%|██████▊   | 17/25 [00:07<00:03,  2.18it/s, est. speed input: 46.42 toks/s, output: 90.45 toks/s][A
Processed prompts:  72%|███████▏  | 18/25 [00:07<00:02,  2.47it/s, est. speed input: 47.12 toks/s, output: 90.44 toks/s][A
Processed prompts:  76%|███████▌  | 19/25 [00:07<00:02,  2.40it/s, est. speed input: 46.63 toks/s, output: 90.45 toks/s][A
Processed prompts:  84%|████████▍ | 21/25 [00:08<00:01,  2.45it/s, est. speed input: 46.39 toks/s, output: 90.45 toks/s][A
Processed prompts:  88%|████████▊ | 22/25 [00:08<00:01,  2.61it/s, est. speed input: 46.35 toks/s, output: 90.45 toks/s][A
Processed prompts:  92%|█████████▏| 23/25 [00:09<00:01,  1.85it/s, est. speed input: 44.93 toks/s, output: 90.47 toks/s][A
Processed prompts:  96%|█████████▌| 24/25 [00:10<00:00,  2.26it/s, est. speed input: 45.23 toks/s, output: 90.46 toks/s][A
Processed prompts: 100%|██████████| 25/25 [00:10<00:00,  1.87it/s, est. speed input: 44.41 toks/s, output: 90.47 toks/s][A
Processed prompts: 100%|██████████| 25/25 [00:10<00:00,  1.87it/s, est. speed input: 44.41 toks/s, output: 90.47 toks/s][AProcessed prompts: 100%|██████████| 25/25 [00:10<00:00,  2.30it/s, est. speed input: 44.41 toks/s, output: 90.47 toks/s]
Benchmark iterations: 100%|██████████| 1/1 [00:10<00:00, 10.90s/it]Benchmark iterations: 100%|██████████| 1/1 [00:10<00:00, 10.90s/it]

Results for processing 25 prompts:
Average latency: 10.9005 seconds
Latency per prompt: 0.4360 seconds

Prompt-Output Pairs:

Pair 1:
Output Length:15
Prompt:What is the capital of France?
Output:
ingmage. {newr. {newr. {new

Pair 2:
Output Length:50
Prompt:Write a short story about a robot that discovers it can dream. The story should be engaging and touch on themes of consciousness and identity.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {new

Pair 3:
Output Length:25
Prompt:Explain the difference between machine learning and artificial intelligence in simple terms that a beginner could understand.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {

Pair 4:
Output Length:10
Prompt:Name three benefits of renewable energy.
Output: {newr. {newr. {new

Pair 5:
Output Length:75
Prompt:You are a detective investigating a mysterious disappearance. The only clue is a cryptic note left behind. Describe your investigation process and what you discover.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr

Pair 6:
Output Length:5
Prompt:Complete this sentence: The best way to learn programming is
Output: Question: the the the

Pair 7:
Output Length:100
Prompt:Write a persuasive essay arguing for or against remote work. Include specific examples and consider both the benefits and drawbacks for employees and employers.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr.

Pair 8:
Output Length:30
Prompt:Describe the process of photosynthesis and explain why it's important for life on Earth.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {new

Pair 9:
Output Length:20
Prompt:Create a recipe for a healthy breakfast that takes less than 10 minutes to prepare.
Output: {newr. {newr. {newr. {newr. {newr.

Pair 10:
Output Length:60
Prompt:You wake up one morning to find that gravity has been reversed. Write about your first hour navigating this new world.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr.

Pair 11:
Output Length:8
Prompt:List the primary colors.
Output: {newr. {newr.

Pair 12:
Output Length:45
Prompt:Explain how blockchain technology works and give two real-world applications beyond cryptocurrency.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {

Pair 13:
Output Length:35
Prompt:Write a dialogue between two characters who meet for the first time at a coffee shop during a thunderstorm.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr

Pair 14:
Output Length:12
Prompt:What are the main causes of climate change?
Output:
ingmage. {newr. {newr

Pair 15:
Output Length:80
Prompt:Design a mobile app that helps people reduce food waste. Describe its key features, target audience, and how it would work.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr.

Pair 16:
Output Length:18
Prompt:Describe the water cycle in three sentences.
Output: {newr. {newr. {newr. {newr. {new

Pair 17:
Output Length:55
Prompt:You are an AI assistant helping a student prepare for a job interview. Give specific advice on how to answer "What is your greatest weakness?"
Output:
ingmage. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {new

Pair 18:
Output Length:25
Prompt:Explain the concept of compound interest and why it's important for personal finance.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {

Pair 19:
Output Length:40
Prompt:Write a poem about the changing seasons that includes imagery from all four seasons.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr.

Pair 20:
Output Length:7
Prompt:Define photosynthesis.
Output: {newr. {newr

Pair 21:
Output Length:65
Prompt:Create a business plan for a small bakery. Include target market, unique selling proposition, and basic financial projections.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {

Pair 22:
Output Length:28
Prompt:Describe three ways that artificial intelligence is currently being used in healthcare.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr.

Pair 23:
Output Length:90
Prompt:You are a travel blogger writing about a hidden gem destination. Describe the location, local culture, must-see attractions, and practical travel tips.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {new

Pair 24:
Output Length:16
Prompt:How do vaccines work to protect against diseases?
Output:
ingmage. {newr. {newr. {newr

Pair 25:
Output Length:70
Prompt:Write a short mystery story where the solution involves a misunderstanding about technology. Include red herrings and a satisfying resolution.
Output: {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {newr. {new
10% percentile latency: 10.9005 seconds
25% percentile latency: 10.9005 seconds
50% percentile latency: 10.9005 seconds
75% percentile latency: 10.9005 seconds
90% percentile latency: 10.9005 seconds
99% percentile latency: 10.9005 seconds
